using System;
using System.IO;
using System.Linq;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

[Generator]
public class KiotaAppSettingsGenerator : IIncrementalGenerator
{

    private string findFileAndRead(string directory, string name, int maxDepth)
    {
        try
        {
            using var reader = new StreamReader(PathHelper.Join(directory, name), Encoding.UTF8);
            return reader.ReadToEnd();
        }
        catch (FileNotFoundException e)
        {
            if (maxDepth > 0)
                return findFileAndRead(PathHelper.Join(directory, ".."), name, maxDepth - 1);
            else
                throw e;
        }
    }
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        context.RegisterSourceOutput(context.CompilationProvider, (spc, compilation) =>
        {

            var directory = Path.GetDirectoryName(compilation.SyntaxTrees.First().FilePath);

            var text = findFileAndRead(directory, "appsettings.json", 5);
            byte[] content = Encoding.UTF8.GetBytes(text);
            var bytes = "new byte[] { " + string.Join(", ", content) + "}";

            string source = $@"// <auto-generated/>
namespace Kiota.Generated
{{
    /// <summary>
    /// The app settings class
    /// </summary>
    public static class KiotaAppSettings
    {{
        /// <summary>
        /// The default app settings
        /// </summary>
        public static byte[] Default()
        {{
            return {bytes};
        }}
    }}
}}
";

            // Add the source code to the compilation
            spc.AddSource("KiotaAppSettings.g.cs", SourceText.From(source, Encoding.UTF8));
        });
    }
}
