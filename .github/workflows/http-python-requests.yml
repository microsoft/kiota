name: Python HTTP Requests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: ['http/python/requests/**', '.github/workflows/**']
  pull_request:
    paths: ['http/python/request/**', '.github/workflows/**']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      relativePath: ./http/python/requests
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev --skip-lock
        working-directory: ${{ env.relativePath }}
      - name: Check code format
        run: |
          pipenv run yapf -dr http_requests
        working-directory: ${{ env.relativePath }}
      - name: Check import order
        run: |
          pipenv run isort http_requests
        working-directory: ${{ env.relativePath }}
      - name: Lint with Pylint
        run: |
          pipenv run pylint http_requests --disable=W --rcfile=.pylintrc
        working-directory: ${{ env.relativePath }}
      - name: Static type checking with Mypy
        run: |
          pipenv run mypy http_requests
        working-directory: ${{ env.relativePath }}
      - name: Run tests with Pytest
        run: |
          pipenv run pytest
        working-directory: ${{ env.relativePath }}

  publish:
    name: Publish distribution to PyPI
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [build]
    env:
      relativePath: ./http/python/requests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install flit
        run: |
          pip install flit
        working-directory: ${{ env.relativePath }}
      - name: Publish the distibution to PyPI
        run: flit publish
        working-directory: ${{ env.relativePath }}
        env:
          FLIT_INDEX_URL: https://test.pypi.org/legacy/
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}