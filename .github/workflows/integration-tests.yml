name: integration-tests

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      [
        "abstractions/**",
        "authentication/**",
        "serialization/**",
        "http/**",
        "**.md",
        ".vscode/**",
        "**.svg",
      ]
  pull_request:
    paths-ignore:
      [
        "abstractions/**",
        "authentication/**",
        "serialization/**",
        "http/**",
        "**.md",
        ".vscode/**",
        "**.svg",
      ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore workloads
        run: dotnet workload restore
      - name: Restore dependencies
        run: dotnet restore kiota.sln
      - name: Build
        run: dotnet publish ./src/kiota/kiota.csproj -c Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -o ./publish
        # -p:PublishTrimmed=true -p:PublishAot=true should be enabled to make test run faster, but there are still limitations
      - uses: actions/upload-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/upload-artifact@v3
        with:
          name: it
          path: it
      - uses: actions/upload-artifact@v3
        with:
          name: tests
          path: tests/**/*.yaml
  integration:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        language: [ java, csharp, go, typescript, ruby ]
        description: [
          './tests/Kiota.Builder.IntegrationTests/InheritingErrors.yaml',
          './tests/Kiota.Builder.IntegrationTests/NoUnderscoresInModel.yaml',
          'https://raw.githubusercontent.com/github/rest-api-description/main/descriptions/api.github.com/api.github.com.yaml'
        ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/download-artifact@v3
        with:
          name: it
          path: it
      - uses: actions/download-artifact@v3
        with:
          name: tests
          path: tests
      - run: |
          chmod +x ./publish/kiota
          chmod +x ./it/get-additional-arguments.ps1
          chmod +x ./it/get-is-suppressed.ps1
      - name: Check if test is suppressed
        id: check-suppressed
        run: |
          $isSuppressed = . ./it/get-is-suppressed.ps1 -descriptionUrl ${{ matrix.description }} -language ${{ matrix.language }}
          Write-Output "IS_SUPPRESSED=$($isSuppressed.ToString().ToLowerInvariant())" >> $Env:GITHUB_OUTPUT
        shell: pwsh
      - name: Temporary Test step for the suppressed condition
        if: steps.check-suppressed.outputs.IS_SUPPRESSED == 'true'
        run : echo "hello world"
      - name: Generate Code
        run: |
          $additionalCommand = . ./it/get-additional-arguments.ps1 -descriptionUrl ${{ matrix.description }} -language ${{ matrix.language }}
          $finalCommand = "./publish/kiota generate --language ${{ matrix.language }} --openapi ${{ matrix.description }}$additionalCommand"
          Write-Host "Final command: $finalCommand"
          iex $finalCommand
        shell: pwsh
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
      - uses: actions/cache@v3
        if: matrix.language == 'java'
        with:
          path: /root/.jbang
          key: $-jbang-$
          restore-keys: |
            $-jbang-
      - name: jbang
        if: matrix.language == 'java'
        uses: jbangdev/jbang-action@v0.104.0
        with:
          script: ./it/java/test.java
        env:
          JBANG_REPO: /root/.jbang/repository
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
      - name: Setup .NET
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - run: dotnet build
        if: matrix.language == 'csharp'
        working-directory: ./it/csharp
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
      - run: |
          Remove-Item obj -Recurse -ErrorAction SilentlyContinue
        if: always() && matrix.language == 'csharp'
        working-directory: ./it/csharp
        shell: pwsh
      - name: Setup Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v3
        with:
          go-version: '^1.20'
      - run: go install
        if: matrix.language == 'go'
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
        working-directory: ./it/go
      - run: go build
        if: matrix.language == 'go'
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
        working-directory: ./it/go
      - uses: actions/setup-node@v3
        if: matrix.language == 'typescript'
        with:
          node-version: '18'
      - run: npm install
        if: matrix.language == 'typescript'
        working-directory: ./it/typescript
      - run: npm run build
        if: matrix.language == 'typescript'
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
        working-directory: ./it/typescript
      - run: |
          Remove-Item node_modules -Recurse -ErrorAction SilentlyContinue
          Remove-Item dist -Recurse -ErrorAction SilentlyContinue
        if: always() && matrix.language == 'typescript'
        working-directory: ./it/typescript
        shell: pwsh
      - name: Set up Ruby
        if: matrix.language == 'ruby'
        uses: ruby/setup-ruby@v1
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
        with:
          working-directory: ./it/ruby
          ruby-version: '3.2.0'
          bundler-cache: true
      - run: git init #required for bundler to work
        if: matrix.language == 'ruby'
        working-directory: ./it/ruby
      - run: bundle exec rake
        if: matrix.language == 'ruby'
        continue-on-error: ${{ steps.check-suppressed.outputs.IS_SUPPRESSED == 'true' }}
        working-directory: ./it/ruby
      - run: |
          Remove-Item vendor -Recurse -ErrorAction SilentlyContinue
          Remove-Item .git -Recurse -ErrorAction SilentlyContinue
          Remove-Item Gemfile.lock -ErrorAction SilentlyContinue
        if: always() && matrix.language == 'ruby'
        working-directory: ./it/ruby
        shell: pwsh
      - id: replace_url
        if: always()
        run: |
          ORIGINAL="${{ matrix.description }}"
          REPLACED="${ORIGINAL//[-:<>|\*\?\\\/\.]/_}"
          echo "ARTKEY=$REPLACED" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: generation-results-${{ matrix.language }}-${{ steps.replace_url.outputs.ARTKEY }}
          path: it/${{ matrix.language }}
      