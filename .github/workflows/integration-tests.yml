name: integration-tests

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      [
        "abstractions/**",
        "authentication/**",
        "serialization/**",
        "http/**",
        "**.md",
        ".vscode/**",
        "**.svg",
      ]
  pull_request:
    paths-ignore:
      [
        "abstractions/**",
        "authentication/**",
        "serialization/**",
        "http/**",
        "**.md",
        ".vscode/**",
        "**.svg",
      ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore workloads
        run: dotnet workload restore
      - name: Restore dependencies
        run: dotnet restore kiota.sln
      - name: Build
        run: dotnet publish ./src/kiota/kiota.csproj -c Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -o ./publish
        # -p:PublishTrimmed=true -p:PublishAot=true should be enabled to make test run faster, but there are still limitations
      - uses: actions/upload-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/upload-artifact@v3
        with:
          name: it
          path: it
      - uses: actions/upload-artifact@v3
        with:
          name: tests
          path: tests/**/*.yaml
  java-it:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/download-artifact@v3
        with:
          name: it
          path: it
      - uses: actions/download-artifact@v3
        with:
          name: tests
          path: tests
      - run: chmod +x ./publish/kiota
      - name: Generate Java Code
        run: |
          ./publish/kiota generate --language Java --openapi ./tests/Kiota.Builder.IntegrationTests/InheritingErrors.yaml --output ./it/java/src
          ./publish/kiota generate --language Java --openapi ./tests/Kiota.Builder.IntegrationTests/NoUnderscoresInModel.yaml --output ./it/java/src --namespace-name "no.underscores"
      - uses: actions/cache@v3
        with:
          path: /root/.jbang
          key: $-jbang-$
          restore-keys: |
            $-jbang-
      - name: jbang
        uses: jbangdev/jbang-action@v0.104.0
        with:
          script: ./it/java/test.java
        env:
          JBANG_REPO: /root/.jbang/repository
  csharp-it:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/download-artifact@v3
        with:
          name: it
          path: it
      - uses: actions/download-artifact@v3
        with:
          name: tests
          path: tests
      - run: chmod +x ./publish/kiota
      - name: Generate CSharp Code
        run: |
          ./publish/kiota generate --language CSharp --openapi ./tests/Kiota.Builder.IntegrationTests/InheritingErrors.yaml --output ./it/dotnet/src/first --namespace-name "app.first"
          ./publish/kiota generate --language CSharp --openapi ./tests/Kiota.Builder.IntegrationTests/NoUnderscoresInModel.yaml --output ./it/dotnet/src/second --namespace-name "app.second"
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - run: dotnet build
        working-directory: ./it/csharp
  java:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        description: [
          'https://api.apis.guru/v2/specs/github.com/api.github.com/1.1.4/openapi.json'
        ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: generator
          path: publish
      - uses: actions/download-artifact@v3
        with:
          name: it
          path: it
      - run: chmod +x ./publish/kiota
      - run: chmod +x ./it/get-additional-arguments.ps1
      - name: Generate Java Code
        run: |
          $additionalCommand = . ./it/get-additional-arguments.ps1 -descriptionUrl ${{ matrix.description }}
          Write-Host "Additional command: $additionalCommand"
          $finalCommand = "./publish/kiota generate --language Java --openapi ${{ matrix.description }} --output ./it/java/src$additionalCommand"
          Write-Host "Final command: $finalCommand"
          iex $finalCommand
        shell: pwsh
      - uses: actions/cache@v3
        with:
          path: /root/.jbang
          key: $-jbang-$
          restore-keys: |
            $-jbang-
      - name: jbang
        uses: jbangdev/jbang-action@v0.103.2
        with:
          script: ./it/java/test.java
        env:
          JBANG_REPO: /root/.jbang/repository